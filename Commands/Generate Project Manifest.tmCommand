<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -wKU

#TODO Limit to source directory within project.

SUPPORT = ENV['TM_SUPPORT_PATH']
PROJECT = ENV['TM_PROJECT_DIRECTORY']

require SUPPORT + '/lib/exit_codes'
require SUPPORT + '/lib/textmate'

def generateComponentXML( the_file, extension )
    c_id = File.basename( the_file, extension )
    c_class = the_file.sub(PROJECT+"/src/","").sub(extension,"").gsub( "/", ".")    
    return "\t&lt;component id=\"#{c_id}\" class=\"#{c_class}\" /&gt;"
end

xml_components = []

TextMate.each_text_file do |file|    
    if File.extname(file) == ".as"
        xc = generateComponentXML( file, ".as" )
        xml_components.push( xc )
    elsif File.extname(file) == ".mxml"
	    xc = generateComponentXML( file, ".mxml" )
        xml_components.push( xc )	    
    end
end

TextMate.exit_show_tool_tip "No source files found" if xml_components.empty?

puts '&lt;?xml version="1.0"?&gt;'
puts "&lt;componentPackage&gt;\n\n"
puts xml_components.sort()
puts "\n&lt;/componentPackage&gt;"


</string>
	<key>fallbackInput</key>
	<string>word</string>
	<key>input</key>
	<string>none</string>
	<key>name</key>
	<string>Generate Manifest</string>
	<key>output</key>
	<string>openAsNewDocument</string>
	<key>scope</key>
	<string>text.xml.mxml</string>
	<key>uuid</key>
	<string>A61DF47A-7BD1-4FE1-8793-CF8C97DF4E6D</string>
</dict>
</plist>
